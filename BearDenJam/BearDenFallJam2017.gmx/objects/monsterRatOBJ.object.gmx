<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>enemy1idleSPR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initial variables (rat)
hp = 40;
spd = 3;

state = M_IDLE;


depth = -y;
cooldown = 90;
curCooldown = 0
can_attack = true;
path = path_add ();
facing = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (path_exists (path)) {
    path_delete (path);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get BEHIND the wall + other stuff
 depth = -y; /// also call the inherited stuff
 
    //attack state
   
   
  // if (attackstate = true &amp;&amp; cooldown = 0) {instance_create(x,y,monsterRatattackOBJ);
  // cooldown = 75
    
    //attackstate= false
   // }
   
    

///monstersteps
     
//death

//player detection
//    if distance_to_object(playerBirdOBJ) &lt; 800 {idlestate = false movementstate = true};
  //  if distance_to_object(playerBirdOBJ) &gt; 1600 {idlestate = true movementstate = false};
    //if distance_to_object(playerBirdOBJ) &lt; 60 { attackstate = true};
    //if cooldown &gt; 0 {cooldown = cooldown -1}
    //   if distance_to_object(playerTownBirdOBJ) &lt; 800 {idlestate = false movementstate = true};
    //if distance_to_object(playerTownBirdOBJ) &gt; 1600 {idlestate = true movementstate = false};
    //if distance_to_object(playerTownBirdOBJ) &lt; 60 { attackstate = true};
    
    if(curCooldown &gt; 0){
    curCooldown -=1;
    }
    
    
switch(state){

case M_IDLE:
    sprite_index = enemy1idleSPR;
    //check for player
    if(instance_exists(playerBirdOBJ)){
        if(point_distance(x,y,playerBirdOBJ.x,playerBirdOBJ.y) &lt; 240){
            state = M_CHASE;
        }
    }
    break;

case M_CHASE:
    sprite_index = enemy1SPR;
    image_speed = 0.4;
    if(instance_exists(playerBirdOBJ)){
    monster_pathingRatSCR()
    if(playerBirdOBJ.x &gt; x){
    facing = 1;
    } else{
    facing = -1;
    }
    image_xscale= facing;
    var dist = point_distance(x,y,playerBirdOBJ.x,playerBirdOBJ.y)
    if(dist &gt; 320) state = M_IDLE;
    if(dist &lt; 64 &amp;&amp; curCooldown &lt;= 0){
        //Attack here
        state = M_ATTACK;
        sprite_index = enemy1AttackSPR;
        image_index = 0;
        curCooldown = cooldown;
    }
    } else{
    state = M_IDLE;
    }
    
    break;
    
    case M_ATTACK:
        //we're attacking
        if(image_index == 2){
        instance_create(x+(32*facing),y,monsterRatattackOBJ);
        }
        if(image_index &gt; 2){
            state=M_IDLE;
            sprite_index = enemy1idleSPR;
        }
        
        
    break;
}

    if(hp &lt;= 0) {instance_destroy(); audio_play_sound(enemy_deathSFX,0,0)};
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="monsterRatOBJ">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pathchange
if (x == other.x &amp;&amp; y= other.y) {
    mazeMoveBirdSCR(sign(other.id-id), 0);

}

var dir = point_direction(other.x, other.y, x, y);
var hspd = lengthdir_x(.75,dir);
var vspd = lengthdir_y(.75,dir);
mazeMoveBirdSCR(hspd, vspd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// path cleaning
if (path_exists (path)) {
    path_delete (path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
